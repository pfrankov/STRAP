// +public
@function line ($lines:1, $font-size:$base-font-size) {
	@if ( relative-unit($font-size) ) {
		$font-size: relative-to-px($font-size);
	}

	@return round($font-size * remove-units(_line-relative($lines, $font-size)));
}

// +public
@function gutter ($number:1) {
	@return $GUTTER_WIDTH * $number;
}

// +public
@function calculate-content-width ($total-columns:$TOTAL_COLUMNS, $column-width: $COLUMN_WIDTH, $gutter-width: gutter()) {
	@return $total-columns * ($column-width + $gutter-width) - $gutter-width;
}

// +public
$content-width: calculate-content-width();

// +public
@function columns ($columns, $column-width: $COLUMN_WIDTH, $gutter-width: gutter()) {
	@return $columns * $column-width + ($columns - 1) * $gutter-width;
}




// -private
@function _line-relative($lines:1, $font-size: $base-font-size) {
	@if ( relative-unit($font-size) ) {
		$font-size: relative-to-px($font-size);
	}

	@return rhythm(multiple-of(($font-size * ($base-line-height / $base-font-size) / $base-line-height) * $lines, 5, 2), $font-size);
}



// Breakpoints
// -private
@function _breakpoint-by-name ($name) {
	@if $name == false {
		@return false;
	}
	@if $name == phone {
		@return $BREAKPOINT_PHONE;
	}
	@else if $name == (phone landscape) {
		@return $BREAKPOINT_PHONE_LANDSCAPE;
	}
	@else if $name == tablet {
		@return $BREAKPOINT_TABLET;
	}
	@else if $name == (tablet landscape) {
		@return $BREAKPOINT_TABLET_LANDSCAPE;
	}
	@else if $name == content {
		@return $content-width;
	}
}

// Yes, there is no keyâ€”value arrays in Sass
// -private
@function _previous-breakpoint-by-name ($name) {
	@if $name == false {
		@return false;
	}
	@if $name == phone {
		@return 0px;
	}
	@else if $name == (phone landscape) {
		@return $BREAKPOINT_PHONE;
	}
	@else if $name == tablet {
		@return $BREAKPOINT_PHONE_LANDSCAPE;
	}
	@else if $name == (tablet landscape) {
		@return $BREAKPOINT_TABLET;
	}
	@else if $name == content {
		@return $BREAKPOINT_TABLET_LANDSCAPE;
	}
}