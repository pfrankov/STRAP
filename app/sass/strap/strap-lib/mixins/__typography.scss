@charset "utf-8";

// Filename must be relative path from fonts directory (css/fonts/) without extension at the end
// +public
@mixin load-font ($name, $file-name, $weight: false, $style: false) {
	@font-face {
		font-family: $name;
		src: font-url($file-name + ".eot");
		src: font-url($file-name + ".eot?#iefix") format("embedded-opentype"),
		font-url($file-name + ".woff") format("woff"),
		font-url($file-name + ".svg#" + $name) format("svg"),
		font-url($file-name + ".ttf") format("truetype");



		@if ( $weight ) {
			font-weight: $weight;
		}
		@if ( $style ) {
			font-style: $style;
		}
	}


}



// +public
@mixin font-size($size, $lines: 1) {
	@if ( relative-unit($size) ){
		$size: relative-to-px($size);
	}

	// Sorry adjust-font-size-to, but I need rem fallback
	@include _font-size-rem-fallback($size);
	line-height: line($lines, $size);
}

// +public
@mixin heading ($top-lines, $bottom-lines, $font-size) {
	@include _font-size-rem-fallback($font-size);


	@if ( relative-unit($font-size) ){
		$font-size: relative-to-px($font-size);
	}

	$line: line(0.75, $font-size);
	$top: $BASE_LINE_HEIGHT * $top-lines;
	$bottom: $BASE_LINE_HEIGHT * $bottom-lines;

	margin: {
		top: $top;
		bottom: $bottom;
	}
	line-height: $line;
}

// +public
@mixin all-headers {
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		@content;
	}
}

// +public
@mixin text-margins {
	&.NoTopMargin {
		margin-top: 0;
	}
	&.NoBottomMargin {
		margin-top: 0;
	}
	&.NoMargin {
		margin: {
			top: 0;
			bottom: 0;
		}
	}
}




// -private
@function _font-size-rem($size) {
	@if ( relative-unit($size) ){
		$size: relative-to-px($size);
	}
	@return $size / $BASE_FONT_SIZE * 1rem
}

// -private
@mixin _font-size-rem-fallback($size) {
	@if ( relative-unit($size) ){
		$size: relative-to-px($size);
	}
	font-size: $size;
	font-size: _font-size-rem($size);
}